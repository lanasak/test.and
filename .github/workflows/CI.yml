name: Continuous Integration Android   

on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/**'
      - '**.md'
env:
  JAVA_VERSION: 11
  API_LEVEL: 29

jobs:
  unit_tests:
    name: Testing
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v2      

      # Set up JDK 11 & Restore Gradle Cache
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
          cache: gradle

      # Run Unit Tests
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest  --continue

      # Upload Test Reports
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: app/build/reports/tests/


  linter:
    name: Linting
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      # Checkout Repository
      - name: Checkout
        uses: actions/checkout@v2

      # Set up JDK 11 & Restore Gradle Cache
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
          cache: gradle

      # Run Debug Linter
      - name: Run Debug Linter
        run: ./gradlew lintDebug

      # Upload Linter Report
      - name: Upload Linter Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: linter-report
          path: app/build/reports/lint-results-*


  emulator_test:
    name: Android Emulator Test
    needs: [unit_tests]
    runs-on: macos-latest
    continue-on-error: true
    steps:
      # Checkout Repository
      - name: Checkout
        uses: actions/checkout@v2

      # Set up JDK 11 & Restore Gradle Cache
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
          cache: gradle

      # Restore AVD Cache
      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}

      # Create AVD & Generate Snapshot For Caching
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      # Run Android Emulator Test
      - name: Run Android Emulator Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest

      # Upload Emulator Test Report
      - name: Upload Emulator Test Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: emulator-test-report
          path: app/build/reports/androidTests/


  build_debug_apk:
    name: Building Debug APK
    needs: [emulator_test]
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: Checkout
        uses: actions/checkout@v2

      # Set up JDK 11 & Restore Gradle Cache
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
          cache: gradle

      # Build Debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      # Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/**.apk
